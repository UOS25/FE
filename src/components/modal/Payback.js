import React, {useRef, useState, useEffect} from 'react';
import './Payback.scss'
import axios from 'axios';
export default function Payback({ paybackModalOpen, setPaybackModalOpen, receipt }){
    const paybackModalBackground = useRef();
    const [items, setItems] = useState([]);
    const [receipts, setReceipts] = useState([]);
    const receiptIdRef = useRef(null);
    // receipt.items
    const [selectedItems, setSelectedItems] = useState([]);
    const [customerName, setCustomerName] = useState(null);
    const [totalPrices, setTotalPrices] = useState([]);

    const onClickReceiptDetail = (receipt) => {
        console.log(receipt)
        setItems(receipt);
    }
    const handleItemCancel = (index) => {
        setSelectedItems(prevItems => 
            prevItems.map((item, i) => i === index ? { ...item, status: 'Cancelled' } : item)
        );
    };

    const onClickModalClose = () => {
        setPaybackModalOpen(false);
    };

    const addReceipt = (phoneNumber) => {

        axios.get(`/receipt/phoneNumber/${phoneNumber}`)
        .then((response) => {
            setReceipts(response.data);

            // CustomerName
            axios.get(`/customer/${phoneNumber}`)
            .then((response) => {
                setCustomerName(response.data.nickname);
            })
            .catch((error) => {
                alert("Í≥†Í∞ù Ï†ïÎ≥¥ Î∂àÎü¨Ïò§Í∏∞ Ïã§Ìå®: "+error);
            });
        });

        receiptIdRef.current.value = '';
    };

    const fetchData = async (itemInfos) => {
        let totalPrice = 0;
    
        // Í∞Å ÏïÑÏù¥ÌÖúÏóê ÎåÄÌï¥ Ï∂îÍ∞Ä ÏöîÏ≤≠ÏùÑ Î≥¥ÎÉÖÎãàÎã§.
        for (const item of itemInfos) {
            try {
                // Í∞Å ÏÉÅÌíàÏùò Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏ÏòµÎãàÎã§.
                const productResponse = await axios.get(`/product/${item.barcode}`);
                const productData = productResponse.data;
    
                // ÏÉÅÌíàÏùò customerPriceÎ•º Ïù¥Ïö©ÌïòÏó¨ Ï¥ù Í∞ÄÍ≤©ÏùÑ Í≥ÑÏÇ∞Ìï©ÎãàÎã§.
                const itemTotalPrice = productData.customerPrice * item.ea;
                // Ï¥ù Í∞ÄÍ≤©Ïóê Ìï©ÏÇ∞Ìï©ÎãàÎã§.
                totalPrice += itemTotalPrice;
            } catch (error) {
                console.error(`Error fetching product with barcode ${item.barcode}:`, error);
            }
        }
    
        // Î™®Îì† ÏöîÏ≤≠Ïù¥ ÏôÑÎ£åÎêú ÌõÑÏóê Ï¥ù Í∞ÄÍ≤©ÏùÑ Î∞òÌôòÌï©ÎãàÎã§.
        return totalPrice;
    };

    function formatDate(inputDate) {
        const dateObject = new Date(inputDate);
    
        const year = dateObject.getFullYear().toString().substr(-2); // Ïó∞ÎèÑÏóêÏÑú Îí§Ïùò Îëê ÏûêÎ¶¨Îßå Í∞ÄÏ†∏Ïò¥
        const month = (dateObject.getMonth() + 1).toString().padStart(2, "0"); // ÏõîÏùÑ 2ÏûêÎ¶¨Î°ú ÌëúÌòÑÌïòÍ≥†, ÌïÑÏöîÌïòÎã§Î©¥ ÏïûÏóê 0ÏùÑ Ï±ÑÏõÄ
        const day = dateObject.getDate().toString().padStart(2, "0"); // ÏùºÏùÑ 2ÏûêÎ¶¨Î°ú ÌëúÌòÑÌïòÍ≥†, ÌïÑÏöîÌïòÎã§Î©¥ ÏïûÏóê 0ÏùÑ Ï±ÑÏõÄ
    
        return `${year}-${month}-${day}`; // ÏõêÌïòÎäî ÌòïÏãùÏúºÎ°ú ÎÇ†ÏßúÎ•º Ï°∞Ìï©ÌïòÏó¨ Î∞òÌôò
    }


    useEffect(() => {
        const fetchDataAndSetTotalPrices = async () => {
            const newTotalPrices = [];
            for (const receipt of receipts) {
                const totalPrice = await fetchData(receipt.itemInfos);
                newTotalPrices.push(totalPrice);
            }
            setTotalPrices(newTotalPrices);
        };
        fetchDataAndSetTotalPrices();
    }, [receipts]);

    const activeEnter=(e) => {
        if(e.key === "Enter"){
            console.log("ÏóîÌÑ∞ÌÇ§ ÏûÖÎ†•, Í∞í: "+receiptIdRef.current.value);
            // getReceiptInfo(receiptIdRef.current.value);
            receiptIdRef.current.value = '';
        }
    }
    if (items.length === 0){
        return (
            <div id="modal-container" ref={paybackModalBackground}>
            <div className="modal-body">
                <h2 className="receipt-title">üßæ ÏòÅÏàòÏ¶ù Ï°∞Ìöå</h2>
                <input
                    className="receiptId-input"
                    placeholder="ÌöåÏõê Î≤àÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî."
                    ref={receiptIdRef}
                    onKeyDown={activeEnter}
                />
                <button className="search-button" onClick={() => addReceipt(receiptIdRef.current.value)}>Í≤ÄÏÉâ</button>
                <div className='receipt-list'>
                    <div className='receipt-header'>
                        <span>Î≤àÌò∏</span>
                        <span>Í≥†Í∞ù Ïù¥Î¶Ñ</span>
                        <span>Íµ¨Îß§ ÎÇ†Ïßú</span>
                        <span>Ï¥ù Í∏àÏï°</span>
                        <span>Íµ¨Îß§ ÏÉÅÌÉú</span>
                    </div>
                    <div className='receipt-entries'>
                        {receipts.map((receipt, index) => {
                            return (
                                <div key={receipt.id}>
                                    <div className='receipt-row' onClick={() => onClickReceiptDetail(receipt)}>
                                        <span>{receipt.receiptId}</span>
                                        <span>{customerName}</span>
                                        <span>{formatDate(receipt.purchaseDate)}</span>
                                        <span>{totalPrices[index]}</span>
                                        <span>{receipt.purchaseStatus}</span>
                                    </div>
                                </div>
                            );
                        })}
                    </div>
                </div>
                <div className="modal-buttons">
                    <button className="close-button" onClick={onClickModalClose}>Îã´Í∏∞</button>
                </div>
            </div>
        </div>
        )
    }
    return (
        <div id="modal-container" className="modal-container">
            <div className='modal-body'>
                <div className='receipt-header'>
                    <div className='receipt-overview'>
                        <p className='receipt-title'>Receipt from (UOS25)</p>
                        <p className='amount'>50000Ïõê</p>
                        <p className='date'>Paid 2002.02.02</p>
                    </div>
                    <div className='logo'>
                        <img src='./image/logo.jpg' alt='Logo'/>
                    </div>
                </div>
                <hr className='receipt-hr'/>
                <div className='receipt-content'>
                    <h3>Purchased Items</h3>
                    <div className="table-container">
                        <table className="purchased-items-table">
                            <thead>
                                <tr>
                                    <th>ÏàúÎ≤à</th>
                                    <th>ÏïÑÏù¥ÌÖú Ïù¥Î¶Ñ</th>
                                    <th>Í∞úÏàò</th>
                                    <th>Í∏àÏï°</th>
                                    <th>Íµ¨Îß§ ÏÉÅÌÉú</th>
                                    <th>Ï∑®ÏÜå</th>
                                </tr>
                            </thead>
                            <tbody>
                                {selectedItems.map((item, index) => (

                                    <tr key={index}>
                                        <td>{index + 1}</td>
                                        <td>{item.productName}</td>
                                        <td>{item.ea}</td>
                                        <td>{(item.price * item.ea).toLocaleString()}Ïõê</td>
                                        <td>{item.status}</td>
                                        <td>
                                            <button 
                                                onClick={() => handleItemCancel(index)}
                                                disabled={item.status === 'Cancelled'}
                                            >
                                                Íµ¨Îß§ Ìè¨Í∏∞
                                            </button>
                                        </td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    </div>
                </div>
                <div className='receipt-footer'>
                    <button style={{ marginRight: '20px' }} onClick={onClickModalClose}>
                        Îã´Í∏∞
                    </button>
                </div>
            </div>
        </div>
    );
}